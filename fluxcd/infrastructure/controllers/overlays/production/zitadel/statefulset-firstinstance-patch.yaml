# Add FIRSTINSTANCE configuration to StatefulSet
# The 'zitadel start' command processes FIRSTINSTANCE on first run and writes PAT to /machinekey/pat
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zitadel
spec:
  template:
    spec:
      serviceAccountName: zitadel
      containers:
      - name: zitadel
        env:
        - name: ZITADEL_FIRSTINSTANCE_ORG_NAME
          value: "PrecisionPlanIT"
        - name: ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_USERNAME
          value: "zitadel-admin-sa"
        - name: ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINE_NAME
          value: "Admin Service Account"
        - name: ZITADEL_FIRSTINSTANCE_ORG_MACHINE_PAT_EXPIRATIONDATE
          value: "2099-12-31T23:59:59Z"
        - name: ZITADEL_FIRSTINSTANCE_ORG_MACHINE_MACHINEKEY_PATH
          value: "/machinekey/machinekey"
        - name: ZITADEL_FIRSTINSTANCE_ORG_MACHINE_PAT_PATH
          value: "/machinekey/pat"
        volumeMounts:
        - name: machinekey
          mountPath: /machinekey
      - name: pat-extractor
        image: docker.io/alpine/k8s:1.34.0
        command:
        - sh
        - -c
        - |
          echo "Waiting for PAT file to be created..."
          timeout=300
          elapsed=0
          while [ ! -f /machinekey/pat ] && [ $elapsed -lt $timeout ]; do
            echo "PAT file not found yet, waiting... ($elapsed/$timeout seconds)"
            sleep 5
            elapsed=$((elapsed + 5))
          done

          if [ ! -f /machinekey/pat ]; then
            echo "ERROR: PAT file not created after $timeout seconds"
            exit 1
          fi

          echo "PAT file found! Reading credentials..."
          PAT=$(cat /machinekey/pat)

          if [ -z "$PAT" ]; then
            echo "ERROR: PAT file is empty"
            exit 1
          fi

          echo "Creating Kubernetes secret..."
          kubectl create secret generic zitadel-k8s-admin-sa \
            --from-literal=pat="$PAT" \
            --dry-run=client -o yaml | kubectl apply -f -

          echo "Secret created successfully!"
          echo "PAT extractor completed. Sleeping to keep container alive..."
          sleep infinity
        volumeMounts:
        - name: machinekey
          mountPath: /machinekey
          readOnly: true
      volumes:
      - name: machinekey
        emptyDir: {}
