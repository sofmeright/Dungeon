apiVersion: batch/v1
kind: Job
metadata:
  name: harbor-rgw-setup
spec:
  ttlSecondsAfterFinished: 600
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: docker.jcr.pcfae.com/amazon/aws-cli:latest
        env:
        - name: ADMIN_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: rgw-admin-ops-user
              key: accessKey
        - name: ADMIN_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: rgw-admin-ops-user
              key: secretKey
        - name: HARBOR_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: harbor-secrets
              key: s3_accesskey
        - name: HARBOR_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: harbor-secrets
              key: s3_secretkey
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: rgw-admin-ops-user
              key: accessKey
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: rgw-admin-ops-user
              key: secretKey
        command:
        - /bin/sh
        - -c
        - |
          set -e
          RGW_ENDPOINT="http://ceph-rgw.gorons-bracelet.svc.cluster.local:80"

          echo "Creating Harbor RGW user via radosgw-admin..."

          # Use aws s3api with RGW admin endpoint
          RESULT=$(aws --endpoint-url="${RGW_ENDPOINT}/admin" \
            s3api put-object \
            --bucket "user" \
            --key "uid=harbor&display-name=Harbor+Container+Registry&access-key=${HARBOR_ACCESSKEY}&secret-key=${HARBOR_SECRETKEY}" \
            2>&1 || echo "User may already exist")

          echo "$RESULT"

          if echo "$RESULT" | grep -q "UserAlreadyExists"; then
            echo "✓ Harbor RGW user already exists"
          elif echo "$RESULT" | grep -q "success\|created"; then
            echo "✓ Harbor RGW user created successfully"
          else
            echo "⚠ Assuming user exists, continuing..."
          fi

          echo "Creating harbor bucket with Harbor user credentials..."

          # Configure AWS CLI with Harbor credentials
          export AWS_ACCESS_KEY_ID="${HARBOR_ACCESSKEY}"
          export AWS_SECRET_ACCESS_KEY="${HARBOR_SECRETKEY}"

          # Create bucket
          if aws --endpoint-url="${RGW_ENDPOINT}" s3 ls s3://harbor 2>/dev/null; then
            echo "✓ Bucket 'harbor' already exists"
          else
            aws --endpoint-url="${RGW_ENDPOINT}" s3 mb s3://harbor
            echo "✓ Bucket 'harbor' created successfully"
          fi

          echo "✓ Setup complete!"
