apiVersion: batch/v1
kind: Job
metadata:
  name: harbor-rgw-setup
spec:
  ttlSecondsAfterFinished: 600
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: docker.jcr.pcfae.com/curlimages/curl:latest
        env:
        - name: ADMIN_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: rgw-admin-ops-user
              key: accessKey
        - name: ADMIN_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: rgw-admin-ops-user
              key: secretKey
        - name: HARBOR_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: harbor-secrets
              key: s3_accesskey
        - name: HARBOR_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: harbor-secrets
              key: s3_secretkey
        command:
        - /bin/sh
        - -c
        - |
          set -e
          RGW_ENDPOINT="http://ceph-rgw.gorons-bracelet.svc.cluster.local:80"

          echo "Creating Harbor RGW user via Admin API..."

          # Create user with Harbor credentials
          RESPONSE=$(curl -s -w "\n%{http_code}" \
            "${RGW_ENDPOINT}/admin/user?uid=harbor&display-name=Harbor+Container+Registry&access-key=${HARBOR_ACCESSKEY}&secret-key=${HARBOR_SECRETKEY}" \
            -H "Authorization: AWS ${ADMIN_ACCESSKEY}:$(echo -n "PUT\n\n\n\n/admin/user" | openssl dgst -sha1 -hmac "${ADMIN_SECRETKEY}" -binary | base64)")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n-1)

          if [ "$HTTP_CODE" = "200" ]; then
            echo "✓ Harbor RGW user created successfully"
          elif echo "$BODY" | grep -q "UserAlreadyExists"; then
            echo "✓ Harbor RGW user already exists"
          else
            echo "✗ Failed to create user (HTTP $HTTP_CODE): $BODY"
            exit 1
          fi

          echo "Creating harbor bucket with Harbor user credentials..."

          # Now use mc with Harbor credentials to create bucket
          apk add --no-cache minio-client

          mc alias set harbor-rgw "${RGW_ENDPOINT}" "${HARBOR_ACCESSKEY}" "${HARBOR_SECRETKEY}"

          if ! mc ls harbor-rgw/harbor 2>/dev/null; then
            mc mb harbor-rgw/harbor
            echo "✓ Bucket 'harbor' created successfully"
          else
            echo "✓ Bucket 'harbor' already exists"
          fi

          mc anonymous set none harbor-rgw/harbor
          mc ls harbor-rgw/harbor

          echo "✓ Setup complete!"
