apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: netbird-management
spec:
  serviceName: netbird-management
  replicas: 3
  selector:
    matchLabels:
      app: netbird
      component: management
  template:
    metadata:
      labels:
        app: netbird
        component: management
    spec:
      initContainers:
      - name: config-generator
        image: busybox:latest
        command: ["/bin/sh", "-c"]
        args:
          - |
            cat > /etc/netbird/config.json <<EOF
            {
              "Stuns": [
                {
                  "Proto": "udp",
                  "URI": "stun:stun.netbird.io:3478"
                }
              ],
              "TURNConfig": {
                "Turns": [
                  {
                    "Proto": "udp",
                    "URI": "turn:netbird.prplanit.com:3478",
                    "Username": "netbird",
                    "Password": ""
                  }
                ],
                "CredentialsTTL": "12h",
                "Secret": "",
                "TimeBasedCredentials": false
              },
              "Signal": {
                "Proto": "https",
                "URI": "netbird.prplanit.com:443"
              },
              "Relay": {
                "Addresses": ["rels://netbird.prplanit.com:443"],
                "CredentialsTTL": "12h"
              },
              "Datadir": "/var/lib/netbird",
              "StoreConfig": {
                "Engine": "postgres"
              },
              "HttpConfig": {
                "Address": "0.0.0.0:443",
                "AuthIssuer": "https://sso.prplanit.com",
                "AuthAudience": "${AUTH_CLIENT_ID}",
                "OIDCConfigEndpoint": "https://sso.prplanit.com/.well-known/openid-configuration",
                "IdpSignKeyRefreshEnabled": true
              },
              "IdpManagerConfig": {
                "ManagerType": "zitadel",
                "ClientConfig": {
                  "Issuer": "https://sso.prplanit.com",
                  "TokenEndpoint": "https://sso.prplanit.com/oauth/v2/token",
                  "ClientID": "${AUTH_CLIENT_ID}",
                  "ClientSecret": "${AUTH_CLIENT_SECRET}",
                  "GrantType": "client_credentials"
                },
                "ExtraConfig": {
                  "ManagementEndpoint": "https://sso.prplanit.com/management/v1"
                }
              },
              "DeviceAuthorizationFlow": {
                "Provider": "hosted",
                "ProviderConfig": {
                  "Audience": "${AUTH_CLIENT_ID}",
                  "ClientID": "${AUTH_CLIENT_ID}",
                  "TokenEndpoint": "https://sso.prplanit.com/oauth/v2/token",
                  "DeviceAuthEndpoint": "https://sso.prplanit.com/oauth/v2/device_authorization",
                  "Scope": "openid",
                  "UseIDToken": false
                }
              },
              "PKCEAuthorizationFlow": {
                "ProviderConfig": {
                  "Audience": "${AUTH_CLIENT_ID}",
                  "ClientID": "${AUTH_CLIENT_ID}",
                  "TokenEndpoint": "https://sso.prplanit.com/oauth/v2/token",
                  "AuthorizationEndpoint": "https://sso.prplanit.com/oauth/v2/authorize",
                  "Scope": "openid profile email offline_access api",
                  "RedirectURLs": ["http://localhost:53000/"]
                }
              }
            }
            EOF

            # Substitute environment variables using shell parameter expansion
            sed -i "s/\${AUTH_CLIENT_ID}/${AUTH_CLIENT_ID}/g" /etc/netbird/config.json
            sed -i "s/\${AUTH_CLIENT_SECRET}/${AUTH_CLIENT_SECRET}/g" /etc/netbird/config.json

            echo "Config generated successfully. Checking content:"
            cat /etc/netbird/config.json | grep -i "clientsecret" | head -5

            echo "Verifying file exists and is readable:"
            ls -la /etc/netbird/
            echo "File permissions:"
            ls -l /etc/netbird/config.json
        env:
        - name: AUTH_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: netbird-secrets
              key: AUTH_CLIENT_ID
        - name: AUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: netbird-secrets
              key: AUTH_CLIENT_SECRET
        volumeMounts:
        - name: generated-config
          mountPath: /etc/netbird
      containers:
      - name: management
        image: PLACEHOLDER_IMAGE
        args:
        - --config
        - /etc/netbird/config.json
        - --log-file
        - console
        ports:
        - containerPort: 443
          name: https
        env:
        - name: NETBIRD_STORE_ENGINE
          value: postgres
        - name: NETBIRD_STORE_ENGINE_POSTGRES_DSN
          valueFrom:
            secretKeyRef:
              name: netbird-secrets
              key: POSTGRES_DSN
        - name: NETBIRD_MGMT_IDP
          value: zitadel
        - name: NETBIRD_IDP_MGMT_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: netbird-secrets
              key: AUTH_CLIENT_ID
        - name: NETBIRD_IDP_MGMT_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: netbird-secrets
              key: AUTH_CLIENT_SECRET
        volumeMounts:
        - name: management-data
          mountPath: /var/lib/netbird
        - name: generated-config
          mountPath: /etc/netbird
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: generated-config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: management-data
    spec:
      accessModes: [ReadWriteOnce]
      storageClassName: PLACEHOLDER_STORAGE_CLASS
      resources:
        requests:
          storage: 5Gi
