apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitlab-sentinel
  labels:
    app: gitlab-sentinel
spec:
  serviceName: gitlab-sentinel-headless
  replicas: 3
  selector:
    matchLabels:
      app: gitlab-sentinel
  template:
    metadata:
      labels:
        app: gitlab-sentinel
    spec:
      initContainers:
      - name: config
        image: docker.io/redis:7.4-alpine
        command:
        - sh
        - -c
        - |
          set -ex
          # Copy base sentinel config
          cp /tmp/sentinel/sentinel.conf /etc/redis/sentinel.conf

          # Find the current Redis master by checking replication info
          nodes="gitlab-redis-0.gitlab-redis-headless.NAMESPACE_PLACEHOLDER.svc.cluster.local,gitlab-redis-1.gitlab-redis-headless.NAMESPACE_PLACEHOLDER.svc.cluster.local,gitlab-redis-2.gitlab-redis-headless.NAMESPACE_PLACEHOLDER.svc.cluster.local"

          MASTER_HOST=""
          for node in $(echo $nodes | tr ',' ' '); do
            # Try to connect and check if this is the master
            ROLE=$(redis-cli -h $node -a "$REDIS_PASSWORD" --no-auth-warning info replication 2>/dev/null | grep "role:" | cut -d: -f2 | tr -d '\r\n' || echo "")
            if [ "$ROLE" = "master" ]; then
              MASTER_HOST=$node
              echo "Found master at $MASTER_HOST"
              break
            fi
          done

          # If no master found, default to redis-0
          if [ -z "$MASTER_HOST" ]; then
            MASTER_HOST="gitlab-redis-0.gitlab-redis-headless.NAMESPACE_PLACEHOLDER.svc.cluster.local"
            echo "No master found, defaulting to $MASTER_HOST"
          fi

          # Configure Sentinel to monitor the master
          echo "sentinel monitor gitlab-redis $MASTER_HOST 6379 2" >> /etc/redis/sentinel.conf
          echo "sentinel auth-pass gitlab-redis $REDIS_PASSWORD" >> /etc/redis/sentinel.conf
          echo "sentinel down-after-milliseconds gitlab-redis 5000" >> /etc/redis/sentinel.conf
          echo "sentinel parallel-syncs gitlab-redis 1" >> /etc/redis/sentinel.conf
          echo "sentinel failover-timeout gitlab-redis 10000" >> /etc/redis/sentinel.conf

          echo "Sentinel configuration complete"
          cat /etc/redis/sentinel.conf
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-redis-password
              key: password
        volumeMounts:
        - name: sentinel-config-template
          mountPath: /tmp/sentinel
        - name: config
          mountPath: /etc/redis
      containers:
      - name: sentinel
        image: docker.io/redis:7.4-alpine
        command:
        - redis-sentinel
        - /etc/redis/sentinel.conf
        ports:
        - name: sentinel
          containerPort: 26379
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-redis-password
              key: password
        volumeMounts:
        - name: config
          mountPath: /etc/redis
        - name: data
          mountPath: /data
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          tcpSocket:
            port: sentinel
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli -p 26379 ping | grep -q PONG
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: sentinel-config-template
        configMap:
          name: gitlab-redis-sentinel-config
      - name: config
        emptyDir: {}
      - name: data
        emptyDir: {}
