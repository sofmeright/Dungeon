apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: gitlab-redis
  labels:
    app: gitlab-redis
spec:
  serviceName: gitlab-redis-headless
  replicas: 3
  selector:
    matchLabels:
      app: gitlab-redis
  template:
    metadata:
      labels:
        app: gitlab-redis
    spec:
      initContainers:
      - name: config
        image: docker.io/redis:7.4-alpine
        command:
        - sh
        - -c
        - |
          set -ex
          # Copy base config
          cp /tmp/redis/redis.conf /etc/redis/redis.conf

          # Determine master FQDN - redis-0 is always the initial master
          MASTER_FDQN="gitlab-redis-0.gitlab-redis-headless.NAMESPACE_PLACEHOLDER.svc.cluster.local"

          # If this is not redis-0, configure as replica
          if [ "$(hostname)" != "gitlab-redis-0" ]; then
            # Check if Sentinel is available and knows the master
            if [ "$(redis-cli -h gitlab-sentinel -p 26379 ping 2>/dev/null)" = "PONG" ]; then
              # Query Sentinel for current master
              SENTINEL_MASTER=$(redis-cli -h gitlab-sentinel -p 26379 sentinel get-master-addr-by-name gitlab-redis 2>/dev/null | head -n1)
              if [ -n "$SENTINEL_MASTER" ]; then
                MASTER_FDQN="$SENTINEL_MASTER"
              fi
            fi
            echo "replicaof $MASTER_FDQN 6379" >> /etc/redis/redis.conf
          fi

          echo "Configuration complete for $(hostname)"
          cat /etc/redis/redis.conf
        volumeMounts:
        - name: redis-config-template
          mountPath: /tmp/redis
        - name: config
          mountPath: /etc/redis
      containers:
      - name: redis
        image: docker.io/redis:7.4-alpine
        command:
        - redis-server
        - /etc/redis/redis.conf
        - --requirepass
        - $(REDIS_PASSWORD)
        - --masterauth
        - $(REDIS_PASSWORD)
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: gitlab-redis-password
              key: password
        volumeMounts:
        - name: data
          mountPath: /data
        - name: config
          mountPath: /etc/redis
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          tcpSocket:
            port: redis
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - redis-cli -a "$REDIS_PASSWORD" ping | grep -q PONG
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-config-template
        configMap:
          name: gitlab-redis-config
      - name: config
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: PLACEHOLDER_STORAGE_CLASS
      resources:
        requests:
          storage: 5Gi
