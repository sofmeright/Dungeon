apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
data:
  config.alloy: |
    // Kubernetes Service Discovery
    discovery.kubernetes "pods" {
      role = "pod"
    }

    discovery.kubernetes "services" {
      role = "service"
    }

    discovery.kubernetes "endpoints" {
      role = "endpoints"
    }

    // Prometheus Remote Write
    prometheus.remote_write "default" {
      endpoint {
        url = "PLACEHOLDER_PROMETHEUS_URL"
      }
    }

    // Scrape Kubernetes Pods with prometheus.io annotations
    prometheus.scrape "kubernetes_pods" {
      targets = discovery.kubernetes.pods.targets
      forward_to = [prometheus.remote_write.default.receiver]

      clustering {
        enabled = false
      }
    }

    // Scrape Kubernetes Services with prometheus.io/scrape annotation
    prometheus.scrape "kubernetes_services" {
      targets = discovery.kubernetes.services.targets
      forward_to = [prometheus.remote_write.default.receiver]

      clustering {
        enabled = false
      }
    }

    // Loki Log Collection
    loki.write "default" {
      endpoint {
        url = "PLACEHOLDER_LOKI_URL"
      }
    }

    // Collect logs from Kubernetes pods
    loki.source.kubernetes "pods" {
      targets    = discovery.kubernetes.pods.targets
      forward_to = [loki.write.default.receiver]
    }

    // Remote scrape targets (lighthouse Docker host)
    discovery.relabel "lighthouse_exporters" {
      targets = [
        {
          __address__ = "PLACEHOLDER_LIGHTHOUSE_IP:9100",
          job = "node-exporter-lighthouse",
          instance = "lighthouse",
        },
        {
          __address__ = "PLACEHOLDER_LIGHTHOUSE_IP:8098",
          job = "cadvisor-lighthouse",
          instance = "lighthouse",
        },
        {
          __address__ = "PLACEHOLDER_LIGHTHOUSE_IP:9795",
          job = "eaton-ups-exporter",
          instance = "lighthouse",
        },
        {
          __address__ = "PLACEHOLDER_LIGHTHOUSE_IP:9221",
          job = "proxmox-pve-exporter",
          instance = "lighthouse",
        },
      ]
    }

    prometheus.scrape "lighthouse_exporters" {
      targets    = discovery.relabel.lighthouse_exporters.output
      forward_to = [prometheus.remote_write.default.receiver]

      scrape_interval = "30s"
      scrape_timeout  = "10s"
    }
