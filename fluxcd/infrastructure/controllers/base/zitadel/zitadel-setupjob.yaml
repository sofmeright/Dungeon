apiVersion: batch/v1
kind: Job
metadata:
  name: zitadel-setup
spec:
  backoffLimit: 5
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: zitadel
      initContainers:
      - name: wait-for-db
        image: PLACEHOLDER_KUBECTL_IMAGE
        command:
        - sh
        - -c
        - |
          echo "Waiting for init job to complete first..."
          until [ "$(kubectl get job zitadel-init -n PLACEHOLDER_NAMESPACE -o jsonpath='{.status.succeeded}' 2>/dev/null)" = "1" ]; do
            echo "Init job not complete yet, waiting..."
            sleep 5
          done
          echo "Init job completed! Setup can proceed."
      containers:
      - name: zitadel-setup
        image: PLACEHOLDER_IMAGE
        env:
        - name: ZITADEL_MASTERKEY
          valueFrom:
            secretKeyRef:
              name: zitadel-masterkey
              key: masterkey
        - name: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zitadel-secrets
              key: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
        - name: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zitadel-postgres-superuser
              key: password
        command:
        - /app/zitadel
        - setup
        - --config
        - /config/zitadel-config.yaml
        - --masterkeyFromEnv
        - --init-projections=true
        volumeMounts:
        - name: zitadel-config
          mountPath: /config
          readOnly: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: zitadel-config
        configMap:
          name: zitadel-config
