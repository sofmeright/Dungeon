apiVersion: batch/v1
kind: Job
metadata:
  name: zitadel-setup
spec:
  backoffLimit: 5
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: zitadel
      initContainers:
      - name: wait-for-db
        image: PLACEHOLDER_POSTGRES_IMAGE
        command:
        - sh
        - -c
        - |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h PLACEHOLDER_POSTGRES_HOST -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 2
          done
          echo "Waiting additional 10s for init job to complete..."
          sleep 10
      containers:
      - name: zitadel-setup
        image: PLACEHOLDER_IMAGE
        env:
        - name: ZITADEL_MASTERKEY
          valueFrom:
            secretKeyRef:
              name: zitadel-masterkey
              key: masterkey
        - name: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zitadel-secrets
              key: ZITADEL_DATABASE_POSTGRES_USER_PASSWORD
        - name: ZITADEL_DATABASE_POSTGRES_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: zitadel-postgres-superuser
              key: password
        command:
        - /app/zitadel
        - setup
        - --config
        - /config/zitadel-config.yaml
        - --masterkeyFromEnv
        - --init-projections=true
        volumeMounts:
        - name: zitadel-config
          mountPath: /config
          readOnly: true
        - name: machine-creds
          mountPath: /machine-creds
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      - name: pat-extractor
        image: registry.k8s.io/kubectl:v1.34.0
        command:
        - sh
        - -c
        - |
          set -e
          echo "Waiting for setup container to complete..."
          # Wait for setup container to finish
          while ! test -f /tmp/setup-done 2>/dev/null; do
            if kubectl get pod $HOSTNAME -o jsonpath='{.status.containerStatuses[?(@.name=="zitadel-setup")].state.terminated}' | grep -q "."; then
              break
            fi
            sleep 5
          done

          echo "Setup completed, checking for PAT file..."
          if [ -f /machine-creds/pat ]; then
            echo "PAT file found! Creating Kubernetes secret..."
            kubectl create secret generic zitadel-k8s-admin-sa \
              --from-file=pat=/machine-creds/pat \
              --dry-run=client -o yaml | \
            kubectl label -f - --dry-run=client -o yaml \
              app.kubernetes.io/managed-by=zitadel \
              app.kubernetes.io/component=machine-user | \
            kubectl apply -f -
            echo "Secret zitadel-k8s-admin-sa created successfully!"
          else
            echo "ERROR: PAT file not found at /machine-creds/pat"
            exit 1
          fi
        volumeMounts:
        - name: machine-creds
          mountPath: /machine-creds
          readOnly: true
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: zitadel-config
        configMap:
          name: zitadel-config
      - name: machine-creds
        emptyDir: {}
