apiVersion: batch/v1
kind: Job
metadata:
  name: zitadel-admin-sa-to-vault
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 3
  template:
    spec:
      serviceAccountName: zitadel
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-secret
        image: PLACEHOLDER_KUBECTL_IMAGE
        command:
        - sh
        - -c
        - |
          echo "Waiting for zitadel-k8s-admin-sa secret to be created by setup job..."
          until kubectl get secret zitadel-k8s-admin-sa -n PLACEHOLDER_NAMESPACE 2>/dev/null; do
            echo "Secret not found yet, waiting..."
            sleep 5
          done
          echo "Secret found!"
      containers:
      - name: sync-to-vault
        image: PLACEHOLDER_CURL_IMAGE
        env:
        - name: VAULT_ADDR
          value: "http://vault.zeldas-lullaby.svc.cluster.local:8200"
        command:
        - sh
        - -c
        - |
          set -e

          echo "=== Syncing zitadel-k8s-admin-sa secret to Vault ==="

          # Authenticate to Vault using Kubernetes service account
          echo "Authenticating to Vault..."
          SA_TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
          VAULT_LOGIN=$(curl -sf "${VAULT_ADDR}/v1/auth/kubernetes/login" \
            -d "{\"jwt\": \"${SA_TOKEN}\", \"role\": \"zitadel-vault-sync\"}")

          VAULT_TOKEN=$(echo "$VAULT_LOGIN" | grep -o '"client_token":"[^"]*"' | cut -d'"' -f4)

          if [ -z "$VAULT_TOKEN" ]; then
            echo "ERROR: Failed to authenticate to Vault"
            exit 1
          fi

          # Get the PAT from the Kubernetes secret
          PAT=$(kubectl get secret zitadel-k8s-admin-sa -n PLACEHOLDER_NAMESPACE -o jsonpath='{.data.token}' | base64 -d)
          USER_ID=$(kubectl get secret zitadel-k8s-admin-sa -n PLACEHOLDER_NAMESPACE -o jsonpath='{.data.userId}' | base64 -d)

          # Store in Vault at zeldas-letter/apps/zitadel with key admin-sa-token
          echo "Storing admin SA credentials in Vault at zeldas-letter/apps/zitadel..."
          curl -sf -X PATCH "${VAULT_ADDR}/v1/zeldas-letter/data/apps/zitadel" \
            -H "X-Vault-Token: ${VAULT_TOKEN}" \
            -H "Content-Type: application/merge-patch+json" \
            -d "{
              \"data\": {
                \"admin-sa-token\": \"$PAT\",
                \"admin-sa-userId\": \"$USER_ID\"
              }
            }"

          echo "=== Successfully synced admin SA to Vault ==="
