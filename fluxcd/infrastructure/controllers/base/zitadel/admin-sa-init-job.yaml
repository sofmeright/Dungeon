apiVersion: batch/v1
kind: Job
metadata:
  name: zitadel-admin-sa-init
spec:
  ttlSecondsAfterFinished: 86400
  backoffLimit: 5
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: zitadel
      containers:
      - name: extract-admin-sa
        image: PLACEHOLDER_ALPINE_IMAGE
        command:
        - sh
        - -c
        - |
          set -e
          echo "Installing kubectl..."
          apk add --no-cache curl
          curl -LO "https://dl.k8s.io/release/v1.34.0/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/

          echo "Checking if secret already exists..."
          if kubectl get secret zitadel-k8s-admin-sa 2>/dev/null; then
            echo "Secret zitadel-k8s-admin-sa already exists, skipping"
            exit 0
          fi

          echo "Waiting for Zitadel pod to be ready..."
          until kubectl get pod zitadel-0 2>/dev/null | grep -q "Running"; do
            echo "Waiting for zitadel-0 pod..."
            sleep 5
          done

          echo "Waiting for Zitadel to write PAT file (up to 5 minutes)..."
          TIMEOUT=300
          ELAPSED=0

          while [ $ELAPSED -lt $TIMEOUT ]; do
            # Try to read PAT file from Zitadel pod
            if kubectl exec zitadel-0 -- test -f /machine-creds/pat 2>/dev/null; then
              echo "PAT file found! Reading credentials..."
              PAT=$(kubectl exec zitadel-0 -- cat /machine-creds/pat)

              if [ -n "$PAT" ]; then
                echo "Creating Kubernetes secret zitadel-k8s-admin-sa..."
                kubectl create secret generic zitadel-k8s-admin-sa \
                  --from-literal=token="$PAT" \
                  --dry-run=client -o yaml | kubectl apply -f -

                echo "Secret created successfully!"
                exit 0
              fi
            fi

            sleep 10
            ELAPSED=$((ELAPSED + 10))
          done

          echo "Timeout waiting for PAT file - Zitadel may not have created first instance yet"
          echo "This is normal if this is not the first deployment or instance already exists"
          exit 0
