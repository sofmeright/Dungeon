apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: appflowy-postgres-init-sql
spec:
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: PLACEHOLDER_SECRET_STORE
  target:
    name: appflowy-postgres-init-sql
    template:
      data:
        init.sql: |
          -- No init required - CloudNativePG creates appflowy user and database
        app-init.sql: |
          -- Create auth schema for gotrue migrations
          -- Must exist before gotrue starts so enums are created in correct schema
          CREATE SCHEMA IF NOT EXISTS auth;

          -- Grant appflowy user full permissions on auth schema
          GRANT ALL ON SCHEMA auth TO appflowy;
          GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA auth TO appflowy;
          GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA auth TO appflowy;
          ALTER DEFAULT PRIVILEGES IN SCHEMA auth GRANT ALL ON TABLES TO appflowy;
          ALTER DEFAULT PRIVILEGES IN SCHEMA auth GRANT ALL ON SEQUENCES TO appflowy;

          -- Pre-create gotrue enums in auth schema to prevent PL/pgSQL do blocks from creating them in public schema
          -- These will be caught by "duplicate_object" exception handler in migrations, ensuring they exist in auth schema
          CREATE TYPE auth.factor_type AS ENUM('totp', 'webauthn');
          CREATE TYPE auth.factor_status AS ENUM('unverified', 'verified');
          CREATE TYPE auth.aal_level AS ENUM('aal1', 'aal2', 'aal3');

          -- Create pgvector extension
          CREATE EXTENSION IF NOT EXISTS vector;
  dataFrom:
  - extract:
      key: PLACEHOLDER_VAULT_KEY
