apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kimai
  labels:
    app: kimai
spec:
  serviceName: kimai
  replicas: 1
  selector:
    matchLabels:
      app: kimai
  template:
    metadata:
      labels:
        app: kimai
    spec:
      securityContext:
        fsGroup: 33
      volumes:
      - name: env-config
        emptyDir: {}
      initContainers:
      - name: prepare-env
        image: docker.io/busybox:latest
        command:
        - sh
        - -c
        - |
          # URL-encode password (replace + with %2B and other special chars)
          ENCODED_PASS=$(echo -n "$DB_PASS" | sed 's/+/%2B/g; s/@/%40/g; s/:/%3A/g; s/\//%2F/g; s/?/%3F/g; s/#/%23/g; s/\[/%5B/g; s/\]/%5D/g; s/!/%21/g; s/\$/%24/g; s/&/%26/g; s/'\''/%27/g; s/(/%28/g; s/)/%29/g; s/\*/%2A/g; s/,/%2C/g; s/;/%3B/g; s/=/%3D/g')
          # Write DATABASE_URL with encoded password to file
          echo "DATABASE_URL=mysql://${DB_USER}:${ENCODED_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}?charset=utf8mb4&serverVersion=mariadb-11.4.2" > /env-config/database_url
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: kimai-mariadb-connection
              key: host
        - name: DB_PORT
          valueFrom:
            secretKeyRef:
              name: kimai-mariadb-connection
              key: port
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: kimai-mariadb-connection
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: kimai-mariadb-connection
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: kimai-mariadb-connection
              key: database
        volumeMounts:
        - name: env-config
          mountPath: /env-config
      - name: wait-for-db
        image: docker.io/busybox:latest
        command:
        - sh
        - -c
        - |
          until nc -z -v -w5 kimai-mariadb-primary 3306; do
            echo "Waiting for MariaDB Galera cluster..."
            sleep 5
          done
      - name: create-admin-user
        image: docker.io/kimai/kimai2:apache
        command:
        - /bin/bash
        - -c
        - |
          # Source DATABASE_URL from file created by prepare-env initContainer
          export $(cat /env-config/database_url)

          # Check if user exists
          if /opt/kimai/bin/console fos:user:list | grep -q "$ADMIN_USERNAME"; then
            echo "User $ADMIN_USERNAME exists, updating password..."
            echo "$ADMIN_PASSWORD" | /opt/kimai/bin/console fos:user:change-password "$ADMIN_USERNAME"
          else
            echo "Creating admin user $ADMIN_USERNAME..."
            /opt/kimai/bin/console kimai:user:create "$ADMIN_USERNAME" "$ADMIN_EMAIL" ROLE_SUPER_ADMIN "$ADMIN_PASSWORD"
          fi

          echo "Admin user sync complete"
        env:
        - name: APP_SECRET
          valueFrom:
            secretKeyRef:
              name: kimai-secret
              key: app-secret
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: kimai-secret
              key: admin-username
        - name: ADMIN_EMAIL
          valueFrom:
            secretKeyRef:
              name: kimai-secret
              key: admin-email
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: kimai-secret
              key: admin-password
        volumeMounts:
        - name: env-config
          mountPath: /env-config
          readOnly: true
      containers:
      - name: kimai
        image: docker.io/kimai/kimai2:apache
        ports:
        - name: http
          containerPort: 8001
          protocol: TCP
        command: ["/bin/bash", "-c"]
        args:
        - |
          # Source DATABASE_URL from file created by init container
          export $(cat /env-config/database_url)
          # Execute the default entrypoint
          exec /usr/local/bin/docker-php-entrypoint apache2-foreground
        env:
        - name: APP_SECRET
          valueFrom:
            secretKeyRef:
              name: kimai-secret
              key: app-secret
        - name: TRUSTED_HOSTS
          value: "localhost,127.0.0.1,kimai"
        volumeMounts:
        - name: env-config
          mountPath: /env-config
          readOnly: true
        - name: kimai-data
          mountPath: /opt/kimai/var
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 512Mi
  volumeClaimTemplates:
  - metadata:
      name: kimai-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5Gi
