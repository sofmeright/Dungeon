apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: unifi-db
spec:
  serviceName: unifi-db
  replicas: PLACEHOLDER_REPLICAS
  selector:
    matchLabels:
      app: unifi-db
  template:
    metadata:
      labels:
        app: unifi-db
    spec:
      containers:
      - name: mongo
        image: PLACEHOLDER_IMAGE
        ports:
        - containerPort: 27017
          name: mongo
          protocol: TCP
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: unifi-secrets
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: unifi-secrets
              key: mongo-root-password
        - name: MONGO_USER
          valueFrom:
            secretKeyRef:
              name: unifi-secrets
              key: mongo-user
        - name: MONGO_PASS
          valueFrom:
            secretKeyRef:
              name: unifi-secrets
              key: mongo-pass
        - name: MONGO_DBNAME
          value: "unifi"
        - name: MONGO_AUTHSOURCE
          value: "unifi"
        volumeMounts:
        - name: zeldas-lullaby-unifi-mongodb
          mountPath: /data/db
        - name: init-mongo
          mountPath: /docker-entrypoint-initdb.d/init-mongo.sh
          subPath: init-mongo.sh
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
      volumes:
      - name: init-mongo
        configMap:
          name: unifi-init-mongo
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: zeldas-lullaby-unifi-mongodb
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: PLACEHOLDER_STORAGE_CLASS
      resources:
        requests:
          storage: 10Gi
