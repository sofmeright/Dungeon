map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# enforce HTTPS
server {
    # Directs the server to listen for IPv4 connections on port 80.
    listen       80;
    # Directs the server to listen for IPv6 connections on port 80.
    listen       [::]:80;
    # The enclosed lines redirect all HTTP requests to HTTPS.
    if ($host = jelly.optcp.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    # This line declares the domain name for the webservice we will be redirecting.
    server_name  jelly.optcp.com;
}

server {
    listen                    443 ssl http2;
    listen                    [::]:443 ssl http2;
    server_name               jelly.optcp.com;

    access_log                /var/log/nginx/jelly.optcp.com.access.log;
    error_log                 /var/log/nginx/jelly.optcp.com.error.log;

    # TLS configuration
    # sudo openssl req -x509 -newkey rsa:4096 -keyout /etc/letsencrypt/live/172.122.122.104/privkey.pem -out /etc/letsencrypt/live/172.122.122.104/fullchain.pem -sha256 -days 3650 -nodes \
    # -subj "/C=XX/ST=Washington/L=Tacoma/O=PrecisionPlanIT/OU=Internal/CN=cell-membrane"
    ssl_certificate           /etc/letsencrypt/live/optcp.com/fullchain.pem;
    ssl_certificate_key       /etc/letsencrypt/live/optcp.com/privkey.pem;
    ssl_protocols             TLSv1.2 TLSv1.3;

    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache         shared:SSL:50m;
    ssl_session_timeout       1d;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_dhparam /etc/nginx/dhparam.pem;

    client_max_body_size 0;

    # Denies iframe embedding to any domains not listed, to prevent against clickjacking and spoofing attacks. You can allow iframe to addresses here! :)
    more_set_headers X-Frame-Options "ALLOW-FROM https://apps.pcfae.com/";
    more_set_headers     "Content-Security-Policy:   frame-ancestors 'self' https://apps.pcfae.com/;";

    location / {
        client_max_body_size 10G; # Required for uploading large files
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        # proxy_redirect off;
        proxy_pass http://pirates-wdda:5055/;
    }
}
