# worker_processes 1;

#events {
    #worker_connections 1024;
#}

#http {
    # HTTP server. In this example, we use a wildcard as server name.
    server {
        listen 80;
        server_name meshc.prplanit.com;

        location / {
            proxy_pass http://10.30.1.123:4449/;
            proxy_http_version 1.1;

            # Inform MeshCentral about the real host, port and protocol
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server. In this example, we use a wildcard as server name.
    server {
        listen 443 ssl;
        server_name meshc.prplanit.com;

        # MeshCentral uses long standing web socket connections, set longer timeouts.
        proxy_send_timeout 330s;
        proxy_read_timeout 330s;

        # We can use the MeshCentral generated certificate & key
        ssl_certificate /etc/letsencrypt/live/prplanit.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/prplanit.com/privkey.pem;
        ssl_session_cache shared:WEBSSL:10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass https://10.30.1.123:4450/;
            proxy_http_version 1.1;

            # Allows websockets over HTTPS.
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;

            # Inform MeshCentral about the real host, port and protocol
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            client_max_body_size 0; # Required for uploading large files
        }
    }

    
    # HTTP server. In this example, we use a wildcard as server name.
    server {
        listen 80;
        server_name trmm.prplanit.com;

        location / {
            proxy_pass http://10.30.1.123:4449/;

            # Inform MeshCentral about the real host, port and protocol
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server. In this example, we use a wildcard as server name.
    server {
        listen 443 ssl;
        server_name trmm.prplanit.com;

        # We can use the MeshCentral generated certificate & key
        ssl_certificate /etc/letsencrypt/live/prplanit.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/prplanit.com/privkey.pem;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass https://10.30.1.123:4450/;

            # Allows websockets over HTTPS.
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            #proxy_set_header Host $host;
            proxy_set_header HOST $http_host;
            grpc_set_header Host $host;
        }
    }

    
    # HTTP server. In this example, we use a wildcard as server name.
    server {
        listen 80;
        server_name trmm-api.prplanit.com;

        location / {
            proxy_pass http://10.30.1.123:4449/;

            # Inform MeshCentral about the real host, port and protocol
            proxy_set_header X-Forwarded-Host $host:$server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # HTTPS server. In this example, we use a wildcard as server name.
    server {
        listen 443 ssl;
        server_name trmm-api.prplanit.com;

        # We can use the MeshCentral generated certificate & key
        ssl_certificate /etc/letsencrypt/live/prplanit.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/prplanit.com/privkey.pem;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass https://10.30.1.123:4450/;

            # Allows websockets over HTTPS.
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            #proxy_set_header Host $host;
            proxy_set_header HOST $http_host;
            grpc_set_header Host $host;
        }
    }
#}