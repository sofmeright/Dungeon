# This Server block is intended to redirect all HTTP requests to HTTPS.
server {
    # Directs the server to listen for IPv4 connections on port 80.
    listen                      80;
    # Directs the server to listen for IPv6 connections on port 80.
    listen                      [::]:80;
    # The enclosed lines redirect all HTTP requests to HTTPS.
    if ($host = sso.prplanit.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    # This line declares the domain name for the webservice we will be redirecting.
    server_name  sso.prplanit.com;
    # Logs are important for diagnosing issues and addressing security concerns. These lines enable access/error logging for the virtual host.
    access_log                  /var/log/nginx/sso.prplanit.com-access.log;
    error_log                   /var/log/nginx/sso.prplanit.com-error.log;
}
server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;    

    server_name sso.prplanit.com;

    ssl_certificate /etc/letsencrypt/live/prplanit.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/prplanit.com/privkey.pem;

    # Logs are important for diagnosing issues and addressing security concerns. These lines enable access/error logging for the virtual host.
    access_log                  /var/log/nginx/sso.prplanit.com-access.log;
    error_log                   /var/log/nginx/sso.prplanit.com-error.log;
    # include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot # Curious about this...
    # Encryption & Security Settings########################################################################################################################################################################|
    # Duration SSL session can be reused.                                                                                                                                                                  #|
    ssl_session_timeout         10m;                                                                                                                                                                       #|
    # Enables Session Caching, only can be declared once globally, most appropriate to declare in default site.                                                                                            #|
#####ssl_session_cache          shared:SSL:60m;                                                                                                                                                            #|
    # Declare SSL/TLS protocols used for secure connections. Only TLSv1.2 and TLSv1.3 are allowed for security reasons.                                                                                    #|
    ssl_protocols               TLSv1.2 TLSv1.3;                                                                                                                                                           #|
    # Prioritize ciphers declared in ssl_ciphers over ciphers preferred by the connecting client.                                                                                                          #|
    ssl_prefer_server_ciphers    on;                                                                                                                                                                       #|
    # Declares ciphers available to connecting clients. The strongest client-supported cipher that matches is used for the connection.                                                                     #|
    ssl_ciphers                 TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;   #|
    # Path to Diffie-Hellman (dh)parameters file used for key exchange. Minimizes eavesdropping and security threats.                                                                                      #|
    # Use "sudo openssl dhparam -out /etc/nginx/dhparam.pem 4096" to generate. 4096-bit (stronger/slower), 2048-bit (weaker/faster).                                                                       #|
    ssl_dhparam                 /etc/nginx/dhparam.pem;                                                                                                                                                    #|
    # Specifies the elliptic curve Diffie-Hellman (ecdh) algorithm used for key exchange during the SSL handshake. This is for a 384-bit key length.                                                       #|
    ssl_ecdh_curve              secp384r1;                                                                                                                                                                 #|
    # Prevents MIME sniffing, an exploit attackers use to interpret files differently than intended and can be a security vulnerability.                                                                   #|
    add_header                  X-Content-Type-Options      nosniff;                                                                                                                                       #|
    # Denies iframe embedding to websites outside of the severs domain, to prevent against spoofing and clickjacking. But we want iframe!                                                                  #|
#####add_header                 X-Frame-Options             "SAMEORIGIN";                                                                                                                                  #|
    # Enforces browser HTTPS-only connections through strict transport security (STS) for a year (max-age=31536000). Protects against vulnerabilities of HTTP.                                             #|
    add_header                  Strict-Transport-Security   "max-age=31536000";                                                                                                                            #|
    # Instructs the browser to enable its cross site-scripting (XSS) filter, and to block rendering of the page if malicious code is detected.                                                             #|
    add_header                  X-XSS-Protection            "1; mode=block";                                                                                                                               #|
    # Denies iframe embedding to any domains not listed, to prevent against clickjacking and spoofing attacks. You can allow iframe to addresses here! :)                                                  #|
    more_set_headers                  Content-Security-Policy     "frame-ancestors 'self' https://apps.pcfae.com/;";   
    more_set_headers X-Frame-Options "ALLOW-FROM https://apps.pcfae.com/";                                                                       #|
    ########################################################################################################################################################################################################|

        location / {

            grpc_pass grpc://10.30.1.123:8174;
            grpc_set_header Host $host;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header HOST $http_host;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;


            proxy_redirect off;
        }
}
