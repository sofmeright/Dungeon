server {
    if ($host = joplin.pcfae.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    listen 80;
    server_name joplin.pcfae.com;
    return 301 https://$server_name$request_uri;
}
server {
    listen 443 ssl http2;
    server_name joplin.pcfae.com;

    ssl_certificate /etc/letsencrypt/live/pcfae.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/pcfae.com/privkey.pem; # managed by Certbot
    
    more_set_headers "Content-Security-Policy: form-action 'self' https://apps.pcfae.com/ https://joplin.pcfae.com/;"; 
    #more_set_headers X-Frame-Options "ALLOW-FROM https://apps.pcfae.com/";
    more_set_headers X-Frame-Options "";
    more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://apps.pcfae.com/ https://joplin.pcfae.com/;"; 
    more_set_headers "Content-Security-Policy: frame-src 'self' https://apps.pcfae.com/ https://joplin.pcfae.com/;"; 

    location / {
        # Specify the upstream server to which Nginx should proxy requests.
        proxy_pass http://10.30.1.123:22300;
        # Specifies the maximum file size that can be uploaded to the server, in megabytes (MB). 0 means no limit.
        client_max_body_size 0;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Port 22300;
        proxy_set_header X-Forwarded-Host moor;
        # Sets the maximum size of the hash table used for storing request headers. Default: 512. If the number of headers exceeds the size of the hash table, Nginx will send an error message to the client.
        proxy_headers_hash_max_size 512;
        # Sets the bucket size of the hash table used to store headers that are passed to the upstream server via proxy.
        proxy_headers_hash_bucket_size 64;
        # Disables buffering of responses from the upstream server to improve performance.
        proxy_buffering off;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # Sets maximum size of temporary files that can be created while reading a response from the upstream server. 0 indicates that no temporary files should be created.
        proxy_max_temp_file_size 0;
    }

}
