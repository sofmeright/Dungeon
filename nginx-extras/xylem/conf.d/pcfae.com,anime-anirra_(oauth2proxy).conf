# ------------------------------------------------------------
# frigate.domain.com
# ------------------------------------------------------------

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

# This Server block is intended to redirect all HTTP requests to HTTPS.
server {
    listen   80;
    listen   [::]:80;
    server_name anime.pcfae.com;
    return 301 https://$server_name$request_uri;
}

server {

  listen                    443 ssl http2;
  listen                    [::]:443 ssl http2;
  server_name               anime.pcfae.com;

  access_log                /var/log/nginx/anime.pcfae.com.access.log;
  error_log                 /var/log/nginx/anime.pcfae.com.error.log;

  # TLS configuration
  # sudo openssl req -x509 -newkey rsa:4096 -keyout /etc/letsencrypt/live/172.122.122.104/privkey.pem -out /etc/letsencrypt/live/172.122.122.104/fullchain.pem -sha256 -days 3650 -nodes \
  # -subj "/C=XX/ST=Washington/L=Tacoma/O=PrecisionPlanIT/OU=Internal/CN=cell-membrane"
  ssl_certificate           /etc/letsencrypt/live/pcfae.com/fullchain.pem;
  ssl_certificate_key       /etc/letsencrypt/live/pcfae.com/privkey.pem;
  ssl_protocols             TLSv1.2 TLSv1.3;

  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384';
  ssl_prefer_server_ciphers on;
  ssl_session_cache         shared:SSL:50m;
  ssl_session_timeout       1d;

  # OCSP Stapling ---
  # fetch OCSP records from URL in ssl_certificate and cache them
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_dhparam /etc/nginx/dhparam.pem;

  client_max_body_size 0;

    more_set_headers 'Access-Control-Allow-Origin' 'https://apps.pcfae.com/';
  more_set_headers "Content-Security-Policy: frame-ancestors 'self' https://apps.pcfae.com/;"; 
  #more_set_headers "Content-Security-Policy: script-src 'self' https://apps.pcfae.com/ https://joplin.pcfae.com/;"; 
  #add_header 'Content-Security-Policy' 'upgrade-insecure-requests';

    add_header X-Content-Type-Options "'self' https://apps.pcfae.com/;";
    proxy_set_header X-Content-Type-Options "'self' https://apps.pcfae.com/;";
  

    auth_request /internal-auth/oauth2/auth;

    # If the auth_request denies the request (401), redirect to the sign_in page
    # and include the final rd URL back to the user's original request.
    error_page 401 =403 https://oa2p.pcfae.com/oauth2/sign_in?rd=$scheme://$host$request_uri;

    # Alternatively send the request to `start` to skip the provider button
    # error_page 401 = http://oa2p.pcfae.com/oauth2/start?rd=$scheme://$host$request_uri;

  location / {

    proxy_http_version 1.1;
    proxy_set_header Connection 'Upgrade';
    proxy_set_header Upgrade $http_upgrade;

    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Server $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $host;
    # This line below is optional and may help in some proxying cases
    proxy_set_header X-Forwarded-Port $server_port;
    
    proxy_pass_request_headers on;
    proxy_set_header Connection "keep-alive";
    proxy_store off;

    # proxy_redirect off;
    proxy_pass http://pirates-wdda:3001;

  }

    # auth_request must be a URI so this allows an internal path to then proxy to
    # the real auth_request path.
    # The trailing /'s are required so that nginx strips the prefix before proxying.
    location /internal-auth/ {
    internal; # Ensure external users can't access this path

    # Make sure the OAuth2 Proxy knows where the original request came from.
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-Uri $request_uri;

    proxy_pass http://moor:4180/;
  }
  
}