 server {
 
    # Directs the server to listen for IPv4 connections on port 443.
    listen                      443 http2 ssl;
    # Directs the server to listen for IPv6 connections on port 443.
    listen                      [::]:443 http2 ssl;

    server_name sh.pcfae.com;

    ssl_certificate /etc/letsencrypt/live/pcfae.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pcfae.com/privkey.pem;

    ssl_protocols             TLSv1.2 TLSv1.3;

    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache         shared:SSL:50m;
    ssl_session_timeout       1d;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_dhparam /etc/nginx/dhparam.pem;

    location / {
        proxy_pass http://10.30.1.123:9145;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
    }
}

# Management Server Block:
server {
 
    # Directs the server to listen for IPv4 connections on port 443.
    listen                      443 http2 ssl;
    # Directs the server to listen for IPv6 connections on port 443.
    listen                      [::]:443 http2 ssl;
 
    server_name shlink.pcfae.com;

    ssl_certificate /etc/letsencrypt/live/pcfae.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/pcfae.com/privkey.pem;
    
    ssl_protocols             TLSv1.2 TLSv1.3;

    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384';
    ssl_prefer_server_ciphers on;
    ssl_session_cache         shared:SSL:50m;
    ssl_session_timeout       1d;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_dhparam /etc/nginx/dhparam.pem;


    auth_request /internal-auth/oauth2/auth;

    # If the auth_request denies the request (401), redirect to the sign_in page
    # and include the final rd URL back to the user's original request.
    error_page 401 =403 https://oa2p.pcfae.com/oauth2/sign_in?rd=$scheme://$host$request_uri;

    # Alternatively send the request to `start` to skip the provider button
    # error_page 401 = http://oa2p.pcfae.com/oauth2/start?rd=$scheme://$host$request_uri;


    location / {
        # Standard headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts for WebSocket connections
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        
        # proxy_redirect off;
        proxy_pass http://10.30.1.123:9146;
    }

    # auth_request must be a URI so this allows an internal path to then proxy to
    # the real auth_request path.
    # The trailing /'s are required so that nginx strips the prefix before proxying.
    location /internal-auth/ {
    internal; # Ensure external users can't access this path

    # Make sure the OAuth2 Proxy knows where the original request came from.
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-Uri $request_uri;

    proxy_pass http://moor:4180/;
  }
}
