---
services:

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /mnt/app_data/Server/_docker_stack/bazarr/config:/config
      #- /mnt/app_data/Server/_docker_stack/bazarr/movies:/movies #optional
      #- /mnt/app_data/Server/_docker_stack/bazarr/tv:/tv #optional
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    logging: &logging
      driver: loki
      options:
        loki-batch-size: "400"
        loki-url: "http://moor:3100/loki/api/v1/push"
        max-size: "10m"

  byparr:
    logging: *logging
    image: ghcr.io/thephaseless/byparr
    container_name: byparr
    environment:
      - TZ=Etc/UTC
      - LOG_LEVEL=INFO
    volumes:
      - /mnt/app_data/Server/_docker_stack/byparr/screenshots:/app/screenshots # For screenshots when exception occurs
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun

   # A tool that automates cross-seeding within qBittorrent
  cross-seed:
    logging: *logging
    image: crossseed/cross-seed:latest
    network_mode: "container:gluetun"
    container_name: cross-seed
    user: 1000:1000
    environment:
      - TZ=Etc/UTC
      - PUID=1000
      - PGID=1000
    volumes:
     - /mnt/app_data/Server/_docker_stack/cross-seed/config:/config
     #- /mnt/app_data/Server/_docker_stack/cross-seed/torrents:/torrents
     #- /mnt/app_data/Server/_docker_stack/cross-seed/downloads:/mnt/downloads
    command: daemon
    restart: unless-stopped
    depends_on:
     - qbittorrent

  #flaresolverr: # Use Byparr if it does not work.
    # DockerHub mirror flaresolverr/flaresolverr:latest
    #image: ghcr.io/flaresolverr/flaresolverr:latest
    #container_name: flaresolverr
    #environment:
      #- LOG_LEVEL=${LOG_LEVEL:-info}
      #- LOG_HTML=${LOG_HTML:-false}
      #- CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      #- TZ=Etc/UTC
    #restart: unless-stopped
    #network_mode: "container:gluetun"
    #cap_add:
      #- NET_ADMIN
    #depends_on: 
      #- gluetun

  gluetun:
    logging: *logging
    image: qmcgaw/gluetun
    container_name: gluetun
    # line above must be uncommented to allow external containers to connect.
    # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/connect-a-container-to-gluetun.md#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    network_mode: bridge
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 6767:6767/tcp # bazarr
      - 2468:2468/tcp # cross-seed
      - 8191:8191/tcp # Flaresolverr
      - 5055:5055/tcp # Jellyseer
      - 8686:8686/tcp # Lidarr
      - 9000:9000/tcp # thelounge
      - 5056:5056/tcp # Overseer
      - 8945:8945/tcp # Pinchflat
      - 9696:9696/tcp # Prowlarr
      - 8227:8227/tcp # pyload
      - 6887:6887/tcp # Qbittorrent
      - 7878:7878/tcp # Radarr
      - 8787:8787/tcp # readarr
      - 8085:8080/tcp # Sabnzbd
      - 8989:8989/tcp # Sonarr
    volumes:
      - /mnt/app_data/Server/_docker_stack/gluetun:/gluetun
      - /mnt/app_data/Server/_docker_stack/gluetun/config:/tmp/gluetun
    env_file: stack.env
    environment:
      # See https://github.com/qdm12/gluetun-wiki/tree/main/setup#setup
      #- VPN_SERVICE_PROVIDER=ivpn
      #- VPN_TYPE=openvpn
      # OpenVPN:
      #- OPENVPN_USER=
      #- OPENVPN_PASSWORD=
      - VPN_SERVICE_PROVIDER=private internet access
      - OPENVPN_USER=$PIA_USER
      - OPENVPN_PASSWORD=$PIA_PASS
      - SERVER_REGIONS=CA Vancouver
      - PORT_FORWARD_ONLY=true
      - VPN_PORT_FORWARDING=on
      - VPN_PORT_FORWARDING_STATUS_FILE=/tmp/gluetun/forwarded_port
      - FIREWALL_OUTBOUND_SUBNETS=10.55.6.136/32
      # Wireguard:
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=
      # - WIREGUARD_ADDRESSES=10.64.222.21/32
      # Timezone for accurate log times
      - TZ=Etc/UTC
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=

  gluetun-qbittorrent-port-manager:
    logging: *logging
    image: gluetun-qbittorrent-port-manager:1.3
    container_name: gluetun-qbittorrent-port-manager
    env_file: stack.env
    environment:
      QBITTORRENT_SERVER: localhost # IP Address of qbittorrent
      QBITTORRENT_PORT: 6887
      QBITTORRENT_USER: $QBITTORRENT_USER # username
      QBITTORRENT_PASS: $QBITTORRENT_PASS # password
      PORT_FORWARDED: /tmp/gluetun/forwarded_port
      HTTP_S: http # Select 'http' or 'https' depending on if you use certificates.
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/gluetun/config:/tmp/gluetun #Set "yourfolder" to the same directory you used for Gluetun

  jellyseerr:
    logging: *logging
    image: ghcr.io/fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=Etc/UTC
      - PORT=5055 #optional
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/jellyseer/config:/app/config

  lidarr:
    logging: *logging
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    env_file: stack.env
    environment:
      - TZ=Etc/UTC
      - PUID=1000
      - PGID=1000
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/lidarr/config:/config
      - otc_music:/media/timecapsule/Media/Music #optional
      #- /path/to/downloads:/downloads #optional

  # A web based IRC client
  thelounge:
    logging: *logging
    image: ghcr.io/thelounge/thelounge:latest
    container_name: thelounge
    network_mode: "service:gluetun"
    restart: unless-stopped
    volumes:
     - /mnt/app_data/Server/_docker_stack/thelounge/config:/var/opt/thelounge

  overseerr:
    logging: *logging
    image: sctx/overseerr
    container_name: overseerr
    env_file: stack.env
    environment:
      - TZ=Etc/UTC
      - LOG_LEVEL=debug
      - PORT=5056
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/overseerr/config:/app/config
      
  pinchflat:
    logging: *logging
    image: ghcr.io/kieraneglin/pinchflat:latest
    container_name: pinchflat
    env_file: stack.env
    environment:
      - TZ=Etc/UTC # Change this to match your server's timezone
      - PUID=3000
      - PGID=3141
      - BASIC_AUTH_USERNAME=$PINCHFLAT_USER
      - BASIC_AUTH_PASSWORD=$PINCHFLAT_PASS
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/pinchflat/config:/config
      - otc_media:/downloads/

  prowlarr:
    logging: *logging
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    env_file: stack.env
    environment:
      - TZ=Etc/UTC
      - PUID=1000
      - PGID=1000
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/prowlarr/config:/config

  pyload-ng:
    logging: *logging
    image: lscr.io/linuxserver/pyload-ng:latest
    container_name: pyload-ng
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    environment:
      - TZ=Etc/UTC
      - PUID=1000
      - PGID=1000
    volumes:
      - /mnt/app_data/Server/_docker_stack/pyload/config:/config
      - /mnt/app_data/Server/_docker_stack/pyload/downloads:/downloads
    restart: unless-stopped


  qbittorrent:
    logging: *logging
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    env_file: stack.env
    environment:
      - TZ=Etc/UTC
      - WEBUI_PORT=6887
      - PUID=1000
      - PGID=1000
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/qbittorrent/config:/config
      - /mnt/app_data/Server/_docker_stack/qbittorrent/downloads:/downloads

  radarr:
    logging: *logging
    container_name: radarr
    image: ghcr.io/hotio/radarr:latest
    env_file: stack.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC/ETC
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /mnt/app_data/Server/_docker_stack/radarr/config:/config
      - /mnt/app_data/Server/_docker_stack/radarr/data:/data
      - radar_dl:/media/timecapsule/Media/Download/__qbittorrent/_Media-Movies
      - otc_movies:/media/timecapsule/Media/Movies

  # A library / filter system for books
  readarr:
    logging: *logging
    container_name: readarr
    image: lscr.io/linuxserver/readarr:develop
    network_mode: "container:gluetun"
    restart: unless-stopped
    volumes:
      - /mnt/app_data/Server/_docker_stack/readarr/config:/config
      #- media_books:/mnt/Books
    environment:
      - TZ=Etc/UTC
      - PUID=1000
      - PGID=1000

  sabnzbd:
    logging: *logging
    image: "lscr.io/linuxserver/sabnzbd:latest"
    container_name: "sabnzbd"
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    #volumes:
      #- "/mnt/media_stack/configs/sabnzbd:/config"
      #- "/mnt/torrent_temp/nzb:/incomplete"
      #- "/mnt/media_stack/media/downloads:/media/downloads"
    privileged: true
    
  sonarr:
    logging: *logging
    image: ghcr.io/hotio/sonarr:latest
    container_name: sonarr
    env_file: stack.env
    environment:
      - TZ=Etc/UTC
      - PUID=1000
      - PGID=1000
    restart: unless-stopped
    network_mode: "container:gluetun"
    cap_add:
      - NET_ADMIN
    depends_on: 
      - gluetun
    volumes:
      - /mnt/app_data/Server/_docker_stack/sonarr/config:/config
      - /mnt/app_data/Server/_docker_stack/sonarr/data:/data
      - sonarr_dl:/media/timecapsule/Media/Download/__qbittorrent/_Media-TV_Shows
      - otc_tv_shows:/media/timecapsule/Media/TV_Shows
      #- sonarr_rb:/timecapsule/Media/TV_Shows/TV_Managed_Recycling_Bin
      #- /path/to/music:/music #optional
      #- /path/to/downloads:/downloads #optional

volumes:
  sonarr_dl:
    driver: local
    driver_opts:
      type: cifs
      o: "iocharset=utf8,username=$OTC_NAS_QBITT_USER,password=$OTC_NAS_QBITT_PASS,rw,vers=3.02,uid=9091,file_mode=0777,dir_mode=0777"
      device: "//172.22.150.101/timecapsule/Media/Download/__qbittorrent/_Media-TV_Shows"
#  sonarr_rb:
#    driver: local
 #   driver_opts:
  #    type: cifs
   #   o: "iocharset=utf8,username=$OTC_NAS_QBITT_USER,password=$OTC_NAS_QBITT_PASS,rw,vers=3.02,uid=9091,file_mode=0777,dir_mode=0777"
    #  device: "//172.22.150.101/timecapsule/Media/Download/__qbittorrent/TV_Managed_Recycling_Bin"
  radar_dl:
    driver: local
    driver_opts:
      type: cifs
      o: "iocharset=utf8,username=$OTC_NAS_QBITT_USER,password=$OTC_NAS_QBITT_PASS,rw,vers=3.02,uid=9091,file_mode=0777,dir_mode=0777"
      device: "//172.22.150.101/timecapsule/Media/Download/__qbittorrent/_Media-Movies"
  otc_media:
    driver: local
    driver_opts:
      type: cifs
      o: "iocharset=utf8,username=$OTC_NAS_MEDIA_USER,password=$OTC_NAS_MEDIA_PASS,rw,vers=3.02,uid=32400,file_mode=0777,dir_mode=0777"
      device: "//172.22.150.101/timecapsule/Media/"
  otc_movies:
    driver: local
    driver_opts:
      type: cifs
      o: "iocharset=utf8,username=$OTC_NAS_QBITT_USER,password=$OTC_NAS_QBITT_PASS,rw,vers=3.02,uid=9091,file_mode=0777,dir_mode=0777"
      device: "//172.22.150.101/timecapsule/Media/Movies"
  otc_tv_shows:
    driver: local
    driver_opts:
      type: cifs
      o: "iocharset=utf8,username=$OTC_NAS_QBITT_USER,password=$OTC_NAS_QBITT_PASS,rw,vers=3.02,uid=9091,file_mode=0777,dir_mode=0777"
      device: "//172.22.150.101/timecapsule/Media/TV_Shows"
  otc_music:
    driver: local
    driver_opts:
      type: cifs
      o: "iocharset=utf8,username=$OTC_NAS_MUSIC_USER,password=$OTC_NAS_MUSIC_PASS,rw,vers=3.02,uid=8686,file_mode=0777,dir_mode=0777"
      device: "//172.22.150.101/timecapsule/Media/Music"