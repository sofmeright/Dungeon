#
# WARNING: To install Immich, follow our guide: https://immich.app/docs/install/docker-compose
#
# Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.

name: immich

services:
  immich-server:
    container_name: immich_server
    depends_on:
      - redis
      - database
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
                - compute
                - video
    env_file:
      - immich-server.env
      - immich-server_secret.env
    healthcheck:
      disable: false
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    ports:
      - '2283:2283'
    restart: always
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - /mnt/ceph_hdd/Server/_docker_stack/immich_server/library:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    logging: &logging
      driver: "loki"
      options:
        loki-batch-size: "400"
        loki-url: "http://monitoring:3100/loki/api/v1/push"
        max-size: "10m"
        max-file: "3"
        mode: "non-blocking"
        loki-retries: "2"
        loki-max-backoff: "800ms"
        loki-timeout: "1s"

  immich-machine-learning:
    logging: *logging
    container_name: immich_machine_learning
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities:
                - gpu
                - compute
                - video
    env_file:
      - immich-server.env
      - immich-server_secret.env
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    healthcheck:
      disable: false
    image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}-cuda
    restart: always
    volumes:
      - model-cache:/cache

  redis:
    logging: *logging
    container_name: immich_redis
    healthcheck:
      test: redis-cli ping || exit 1
    image: docker.io/redis:6.2-alpine@sha256:148bb5411c184abd288d9aaed139c98123eeb8824c5d3fce03cf721db58066d8
    restart: always

  database:
    logging: *logging
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    container_name: immich_postgres
    env_file:
      - immich-server.env
      - immich-postgres_secret.env
    environment: # (Set database values in env files! ^)
      #POSTGRES_PASSWORD: ${DB_PASSWORD}
      #POSTGRES_USER: ${DB_USERNAME}
      #POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    restart: always
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - /opt/docker/immich-server/postgres:/var/lib/postgresql/data

volumes:
  model-cache: